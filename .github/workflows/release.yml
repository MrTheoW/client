name: Release

on:
  workflow_run:
    workflows: ["Build Windows"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Download VERSION
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: init.yml
          name: version
      - name: Add Version to environment
        run: |
          echo "VERSION=$(<version.txt)" >> $GITHUB_ENV
      - name: Download windows exe
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: windows.yml
          name: windows-exe
          path: target/install
      - name: Download linux deb
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: linux.yml
          name: linux-deb
          path: target/install
      - name: Download linux zip
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: linux.yml
          name: linux-zip
          path: target/install
      - name: Download MacOS dmg
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: macos.yml
          name: macos-dmg
          path: target/install
      - name: Delete old release if exists
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        continue-on-error: true
        with:
          delete_release: true
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release nightly build
        uses: ncipollo/release-action@v1.8.6
        with:
          allowUpdates: true
          name: Stream-Pi-Server ${{ env.VERSION }}
          artifacts: target/install/*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{  env.VERSION }}
